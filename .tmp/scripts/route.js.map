{"version":3,"sources":["route.js"],"names":["$","window","on","e","preventDefault","currentURL","location","hash","previousPage","localStorage","getItem","render","decodeURI","putMainContent","page","mainContent","document","getElementById","home","Home","htmlContentHome","innerHTML","url","arrayUrl","split","reseturl","temp","substring","allowedResets","indexOf","secondParam"],"mappings":";;AAAAA,EAAEC,MAAF,EAAUC,EAAV,CAAa,YAAb,EAA2B,UAACC,CAAD,EAAM;;AAE/BA,IAAEC,cAAF;AACA;AACA;AACA,MAAIC,aAAaJ,OAAOK,QAAP,CAAgBC,IAAjC;AACA,MAAIC,eAAeC,aAAaC,OAAb,CAAqB,eAArB,CAAnB;;AAEA,SAAOC,OAAOC,UAAUX,OAAOK,QAAP,CAAgBC,IAA1B,CAAP,CAAP;AAED,CAVD;;AAYA,IAAIM,iBAAiB,SAAjBA,cAAiB,CAACC,IAAD,EAAU;;AAE7B,MAAMC,cAAcC,SAASC,cAAT,CAAwB,MAAxB,CAApB;AACA,MAAIC,OAAO,IAAIC,IAAJ,EAAX;;AAGA,UAAQL,IAAR;AACE,SAAK,MAAL;AACE,UAAIM,kBAAkBF,KAAKP,MAAL,EAAtB;AACAI,kBAAYM,SAAZ,GAAwBD,eAAxB;AACA;AACF,SAAK,OAAL;AACE;AACA;AACA;AACA;AACF;AACE;AAXJ;AAcD,CApBD;;AAuBA;;;;;AAKA,IAAMT,SAAS,SAATA,MAAS,CAACW,GAAD,EAAS;AACtB;AACA,MAAIC,WAAWD,IAAIE,KAAJ,CAAU,GAAV,CAAf;AACA,MAAIC,WAAWF,SAAS,CAAT,EAAYC,KAAZ,CAAkB,GAAlB,CAAf;;AAEA,MAAIE,OAAQH,SAAS,CAAT,CAAD,CAAcI,SAAd,CAAwB,CAAxB,CAAX;AACA,MAAIC,gBAAgB,CAAC,gBAAD,EAAmB,0BAAnB,EAA+C,yBAA/C,EAA0E,cAA1E,EAA0F,mBAA1F,EAA+G,cAA/G,CAApB;AACA,MAAIH,YAAYG,cAAcC,OAAd,CAAsBJ,SAAS,CAAT,CAAtB,IAAqC,CAAC,CAAtD,EAAyD;AACvDC,WAAOD,SAAS,CAAT,EAAYD,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,CAAP;AACD;;AAED;AACA;AACA,MAAIM,cAAeP,SAAS,CAAT,IAAcA,SAAS,CAAT,CAAd,GAA4B,EAA/C;;AAEA,MAAIG,QAAQ,EAAZ,EAAgB;AACdA,WAAO,MAAP;AACD;;AAED,SAAOb,eAAea,IAAf,CAAP;AAED,CArBD","file":"route.js","sourcesContent":["$(window).on('hashchange', (e)=> {\n\n  e.preventDefault();\n  // On every hash change the render function is called with the new hash.\n  // This is how the navigation of our app happens.\n  var currentURL = window.location.hash;\n  var previousPage = localStorage.getItem('previous_page');\n\n  return render(decodeURI(window.location.hash));\n\n});\n\nvar putMainContent = (page) => {\n\n  const mainContent = document.getElementById('main');\n  var home = new Home();\n\n\n  switch (page) {\n    case 'home':\n      let htmlContentHome = home.render();\n      mainContent.innerHTML = htmlContentHome;\n      break;\n    case 'about':\n      //$('.coaches').before( about.render() );//todo just for demo\n      // $('.coaches').show();//todo just for demo\n      // document.getElementById('todemo').innerHTML = htmlabout;//todo just for demo\n      break;\n    default:\n      break;\n  }\n\n};\n\n\n/**\n * This function decides what type of page to show\n * depending on the current url hash value.\n * @param url\n */\nconst render = (url) => {\n  // Get the keyword from the url.\n  var arrayUrl = url.split('/');\n  var reseturl = arrayUrl[0].split('?');\n\n  var temp = (arrayUrl[0]).substring(1);\n  var allowedResets = ['#resetpassword', '#resetparentalcontrolpin', '#updateparentalcontrols', '#unsubscribe', '#standalone-error', '#login-error'];\n  if (reseturl && allowedResets.indexOf(reseturl[0]) > -1) {\n    temp = reseturl[0].split('#')[1];\n  }\n\n  // if the user is going deep, the URL will contains the content_id on the second param\n  // except if the user is on the home page\n  var secondParam = (arrayUrl[1] ? arrayUrl[1] : '');\n\n  if (temp == '') {\n    temp = 'home';\n  }\n\n  return putMainContent(temp);\n\n};\n\n\n\n\n"]}